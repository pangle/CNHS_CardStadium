/*
 * 9/17 - working set gutter size, set number of rows, and set number of columns
 * 9-19-12 working set error amount, working error toggle button
 * 9-20-12 working load sequence and stadium files, working set step
 */
package org.cnhs.cardstadium.gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.MediaTracker;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.cnhs.cardstadium.model.Sequence;
import org.cnhs.cardstadium.model.Stadium;
import org.cnhs.cardstadium.model.Step;
import org.cnhs.cardstadium.util.ColorPickerButtonDelegate;
import org.cnhs.cardstadium.util.DeepCopy;
import org.cnhs.cardstadium.util.GameImageUtil;
import org.cnhs.cardstadium.util.SequencePrinter;
import org.cnhs.cardstadium.util.StadiumSyncUtil;

/**
 *
 * @author workstation
 */
public class GUI extends javax.swing.JFrame implements ColorPickerButtonDelegate {

    public static final String[] VALID_IMAGE_TYPES = {"PNG","GIF","JPG","JPEG"};

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        this.addMouseListener(perspectivePanel);
        this.addMouseMotionListener(perspectivePanel);
        this.addKeyListener(perspectivePanel);
        this.addComponentListener(perspectivePanel);

        //stadium = new Stadium();
        StadiumSyncUtil.syncStadiumToEditor(stadium, perspectivePanel.getEditorLayer());
        perspectivePanel.getStadiumLayer().setStadium(stadium.getStadiumBGFile());

        //sequence = new Sequence();
        syncSequenceToGUI();

        toolSet_SequenceSet_SchoolColor1.setDelegate(this);
        toolSet_SequenceSet_SchoolColor2.setDelegate(this);

        // Finally, bring the sequence in line with the rest of the GUI, etc.
        perspectivePanel.getCardLayer().setSequence(sequence);
        perspectivePanel.getCardLayer().setStep(0);
        perspectivePanel.getCardLayer().setError(0);
        perspectivePanel.getCardLayer().setVisible(true);
        toolSet_SequenceSet_SchoolColor1.setColor(sequence.getC1());
        toolSet_SequenceSet_SchoolColor2.setColor(sequence.getC2());

        toolSet_StadiumSet_Row.setValue(stadium.getHorizontalSubdivisions());
        toolSet_StadiumSet_Column.setValue(stadium.getVerticalSubdivisions());
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sequence = new org.cnhs.cardstadium.model.Sequence();
        stadium = new org.cnhs.cardstadium.model.Stadium();
        colorButtons = new javax.swing.ButtonGroup();
        toolSet_StadiumSet = new javax.swing.JPanel();
        toolSet_StadiumSet_GutterSize_Label = new javax.swing.JLabel();
        toolSet_StadiumSet_Column_Label = new javax.swing.JLabel();
        toolSet_StadiumSet_Row_Label = new javax.swing.JLabel();
        toolSet_StadiumSet_Column = new javax.swing.JSpinner();
        toolSet_StadiumSet_Row = new javax.swing.JSpinner();
        toolSet_StadiumSet_GutterSize = new javax.swing.JSlider();
        toolSet_StepsSet = new javax.swing.JPanel();
        toolSet_StepsSet_DeleteStep = new javax.swing.JButton();
        toolSet_StepsSet_AddStep = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        toolSet_StepsSet_StepList = new org.cnhs.cardstadium.gui.DragDropList();
        toolSet_StepsSet_RenameStep = new javax.swing.JButton();
        toolSet_StepsSet_DuplicateStep = new javax.swing.JButton();
        perspectivePanel = new org.cnhs.cardstadium.gui.PerspectivePanel();
        toolSet_DisplaySet = new javax.swing.JPanel();
        toolSet_DisplaySet_ErrorToggle = new javax.swing.JToggleButton();
        toolSet_DisplaySet_ErrorLevel = new javax.swing.JSlider();
        toolSet_DisplaySet_Error_Label = new javax.swing.JLabel();
        toolSet_DisplaySet_TransitionSpeed_Label = new javax.swing.JLabel();
        toolSet_DisplaySet_TransitionSpeed = new javax.swing.JSlider();
        toolSet_DisplaySet_EditorDisplayToggle = new javax.swing.JToggleButton();
        toolSet_SequenceSet = new javax.swing.JPanel();
        toolSet_SequenceSet_Row_Label = new javax.swing.JLabel();
        toolSet_SequenceSet_Row = new javax.swing.JSpinner();
        toolSet_SequenceSet_Column_Label = new javax.swing.JLabel();
        toolSet_SequenceSet_Column = new javax.swing.JSpinner();
        toolSet_SequenceSet_SchoolColor_Label = new javax.swing.JLabel();
        toolSet_SequenceSet_SchoolColor1 = new org.cnhs.cardstadium.util.ColorPickerButton();
        toolSet_SequenceSet_SchoolColor2 = new org.cnhs.cardstadium.util.ColorPickerButton();
        toolSet_SequenceSet_SchoolColorNoPaint = new javax.swing.JRadioButton();
        toolSet_SequenceSet_SchoolColor1Paint = new javax.swing.JRadioButton();
        toolSet_SequenceSet_SchoolColor2Paint = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menuBar_FileMenu = new javax.swing.JMenu();
        menuBar_FileMenu_OpenMenu = new javax.swing.JMenu();
        menuBar_FileMenu_OpenMenu_StadiumItem = new javax.swing.JMenuItem();
        menuBar_FileMenu_OpenMenu_SequenceItem = new javax.swing.JMenuItem();
        menuBar_FileMenu_SaveMenu = new javax.swing.JMenu();
        menuBar_FileMenu_SaveMenu_StadiumItem = new javax.swing.JMenuItem();
        menuBar_FileMenu_SaveMenu_SequenceItem = new javax.swing.JMenuItem();
        menuBar_FileMenu_SaveAsMenu = new javax.swing.JMenu();
        menuBar_FileMenu_SaveAsMenu_StadiumItem = new javax.swing.JMenuItem();
        menuBar_FileMenu_SaveAsMenu_SequenceItem = new javax.swing.JMenuItem();
        menuBar_FileMenu_PrintItem = new javax.swing.JMenuItem();
        menuBar_StadiumMenu = new javax.swing.JMenu();
        menuBar_StadiumMenu_BackgroundSetItem = new javax.swing.JMenuItem();
        menuBar_StadiumMenu_BackgroundDefaultItem = new javax.swing.JMenuItem();
        menuBar_SequenceMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuBar_SequenceMenu_StepFromImageItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Card Stadium - Beta");

        toolSet_StadiumSet.setBorder(javax.swing.BorderFactory.createTitledBorder("Stadium"));

        toolSet_StadiumSet_GutterSize_Label.setText("Card Spacing:");

        toolSet_StadiumSet_Column_Label.setText("Columns:");

        toolSet_StadiumSet_Row_Label.setText("Rows:");

        toolSet_StadiumSet_Column.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        toolSet_StadiumSet_Column.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toolSet_StadiumSet_ColumnStateChanged(evt);
            }
        });

        toolSet_StadiumSet_Row.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        toolSet_StadiumSet_Row.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toolSet_StadiumSet_RowStateChanged(evt);
            }
        });

        toolSet_StadiumSet_GutterSize.setMajorTickSpacing(20);
        toolSet_StadiumSet_GutterSize.setMaximum(200);
        toolSet_StadiumSet_GutterSize.setMinorTickSpacing(10);
        toolSet_StadiumSet_GutterSize.setPaintTicks(true);
        toolSet_StadiumSet_GutterSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toolSet_StadiumSet_GutterSizeStateChanged(evt);
            }
        });

        javax.swing.GroupLayout toolSet_StadiumSetLayout = new javax.swing.GroupLayout(toolSet_StadiumSet);
        toolSet_StadiumSet.setLayout(toolSet_StadiumSetLayout);
        toolSet_StadiumSetLayout.setHorizontalGroup(
            toolSet_StadiumSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolSet_StadiumSetLayout.createSequentialGroup()
                .addGroup(toolSet_StadiumSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(toolSet_StadiumSet_GutterSize_Label)
                    .addComponent(toolSet_StadiumSet_Row_Label)
                    .addComponent(toolSet_StadiumSet_Column_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(toolSet_StadiumSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolSet_StadiumSet_GutterSize, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(toolSet_StadiumSetLayout.createSequentialGroup()
                        .addGroup(toolSet_StadiumSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toolSet_StadiumSet_Row, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toolSet_StadiumSet_Column, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        toolSet_StadiumSetLayout.setVerticalGroup(
            toolSet_StadiumSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolSet_StadiumSetLayout.createSequentialGroup()
                .addGroup(toolSet_StadiumSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toolSet_StadiumSet_Row_Label)
                    .addComponent(toolSet_StadiumSet_Row, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(toolSet_StadiumSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toolSet_StadiumSet_Column_Label)
                    .addComponent(toolSet_StadiumSet_Column, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(toolSet_StadiumSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolSet_StadiumSet_GutterSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, toolSet_StadiumSetLayout.createSequentialGroup()
                        .addComponent(toolSet_StadiumSet_GutterSize_Label)
                        .addContainerGap())))
        );

        toolSet_StepsSet.setBorder(javax.swing.BorderFactory.createTitledBorder("Steps"));

        toolSet_StepsSet_DeleteStep.setText("Delete Step");
        toolSet_StepsSet_DeleteStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolSet_StepsSet_DeleteStepActionPerformed(evt);
            }
        });

        toolSet_StepsSet_AddStep.setText("Add Step");
        toolSet_StepsSet_AddStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolSet_StepsSet_AddStepActionPerformed(evt);
            }
        });

        toolSet_StepsSet_StepList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        toolSet_StepsSet_StepList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                toolSet_StepsSet_StepListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(toolSet_StepsSet_StepList);

        toolSet_StepsSet_RenameStep.setText("Rename Step");
        toolSet_StepsSet_RenameStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolSet_StepsSet_RenameStepActionPerformed(evt);
            }
        });

        toolSet_StepsSet_DuplicateStep.setText("Duplicate Step");
        toolSet_StepsSet_DuplicateStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolSet_StepsSet_DuplicateStepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout toolSet_StepsSetLayout = new javax.swing.GroupLayout(toolSet_StepsSet);
        toolSet_StepsSet.setLayout(toolSet_StepsSetLayout);
        toolSet_StepsSetLayout.setHorizontalGroup(
            toolSet_StepsSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolSet_StepsSetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(toolSet_StepsSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(toolSet_StepsSet_DeleteStep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(toolSet_StepsSet_AddStep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(toolSet_StepsSet_RenameStep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(toolSet_StepsSet_DuplicateStep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        toolSet_StepsSetLayout.setVerticalGroup(
            toolSet_StepsSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(toolSet_StepsSetLayout.createSequentialGroup()
                .addComponent(toolSet_StepsSet_DeleteStep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolSet_StepsSet_AddStep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolSet_StepsSet_RenameStep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolSet_StepsSet_DuplicateStep))
        );

        perspectivePanel.setFocusable(false);

        toolSet_DisplaySet.setBorder(javax.swing.BorderFactory.createTitledBorder("Display"));

        toolSet_DisplaySet_ErrorToggle.setText("Error On");
        toolSet_DisplaySet_ErrorToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolSet_DisplaySet_ErrorToggleActionPerformed(evt);
            }
        });

        toolSet_DisplaySet_ErrorLevel.setMajorTickSpacing(1);
        toolSet_DisplaySet_ErrorLevel.setMaximum(10);
        toolSet_DisplaySet_ErrorLevel.setPaintTicks(true);
        toolSet_DisplaySet_ErrorLevel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toolSet_DisplaySet_ErrorLevelStateChanged(evt);
            }
        });

        toolSet_DisplaySet_Error_Label.setText("Error");

        toolSet_DisplaySet_TransitionSpeed_Label.setText("Animation Length");

        toolSet_DisplaySet_TransitionSpeed.setMajorTickSpacing(5);
        toolSet_DisplaySet_TransitionSpeed.setMaximum(35);
        toolSet_DisplaySet_TransitionSpeed.setMinorTickSpacing(1);
        toolSet_DisplaySet_TransitionSpeed.setPaintTicks(true);
        toolSet_DisplaySet_TransitionSpeed.setValue(10);
        toolSet_DisplaySet_TransitionSpeed.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toolSet_DisplaySet_TransitionSpeedStateChanged(evt);
            }
        });

        toolSet_DisplaySet_EditorDisplayToggle.setSelected(true);
        toolSet_DisplaySet_EditorDisplayToggle.setText("Show Stadium Editor");
        toolSet_DisplaySet_EditorDisplayToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolSet_DisplaySet_EditorDisplayToggleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout toolSet_DisplaySetLayout = new javax.swing.GroupLayout(toolSet_DisplaySet);
        toolSet_DisplaySet.setLayout(toolSet_DisplaySetLayout);
        toolSet_DisplaySetLayout.setHorizontalGroup(
            toolSet_DisplaySetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolSet_DisplaySetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(toolSet_DisplaySetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(toolSet_DisplaySetLayout.createSequentialGroup()
                        .addComponent(toolSet_DisplaySet_Error_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(toolSet_DisplaySet_ErrorToggle))
                    .addComponent(toolSet_DisplaySet_ErrorLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(toolSet_DisplaySetLayout.createSequentialGroup()
                        .addComponent(toolSet_DisplaySet_TransitionSpeed_Label)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(toolSet_DisplaySet_TransitionSpeed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(toolSet_DisplaySet_EditorDisplayToggle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        toolSet_DisplaySetLayout.setVerticalGroup(
            toolSet_DisplaySetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolSet_DisplaySetLayout.createSequentialGroup()
                .addGroup(toolSet_DisplaySetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toolSet_DisplaySet_Error_Label)
                    .addComponent(toolSet_DisplaySet_ErrorToggle))
                .addGap(5, 5, 5)
                .addComponent(toolSet_DisplaySet_ErrorLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(toolSet_DisplaySet_TransitionSpeed_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolSet_DisplaySet_TransitionSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(toolSet_DisplaySet_EditorDisplayToggle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        toolSet_SequenceSet.setBorder(javax.swing.BorderFactory.createTitledBorder("Sequence"));

        toolSet_SequenceSet_Row_Label.setText("Rows:");

        toolSet_SequenceSet_Row.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        toolSet_SequenceSet_Row.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toolSet_SequenceSet_RowStateChanged(evt);
            }
        });

        toolSet_SequenceSet_Column_Label.setText("Columns:");

        toolSet_SequenceSet_Column.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        toolSet_SequenceSet_Column.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toolSet_SequenceSet_ColumnStateChanged(evt);
            }
        });

        toolSet_SequenceSet_SchoolColor_Label.setText("School Colors:");

        toolSet_SequenceSet_SchoolColor1.setText("colorPickerButton1");

        toolSet_SequenceSet_SchoolColor2.setText("colorPickerButton2");

        colorButtons.add(toolSet_SequenceSet_SchoolColorNoPaint);
        toolSet_SequenceSet_SchoolColorNoPaint.setSelected(true);
        toolSet_SequenceSet_SchoolColorNoPaint.setText("Off");
        toolSet_SequenceSet_SchoolColorNoPaint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolSet_SequenceSet_SchoolColorNoPaintActionPerformed(evt);
            }
        });

        colorButtons.add(toolSet_SequenceSet_SchoolColor1Paint);
        toolSet_SequenceSet_SchoolColor1Paint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolSet_SequenceSet_SchoolColor1PaintActionPerformed(evt);
            }
        });

        colorButtons.add(toolSet_SequenceSet_SchoolColor2Paint);
        toolSet_SequenceSet_SchoolColor2Paint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolSet_SequenceSet_SchoolColor2PaintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout toolSet_SequenceSetLayout = new javax.swing.GroupLayout(toolSet_SequenceSet);
        toolSet_SequenceSet.setLayout(toolSet_SequenceSetLayout);
        toolSet_SequenceSetLayout.setHorizontalGroup(
            toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolSet_SequenceSetLayout.createSequentialGroup()
                .addGroup(toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(toolSet_SequenceSetLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(toolSet_SequenceSet_Row_Label))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, toolSet_SequenceSetLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(toolSet_SequenceSet_Column_Label)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(toolSet_SequenceSetLayout.createSequentialGroup()
                        .addComponent(toolSet_SequenceSet_Row, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toolSet_SequenceSet_SchoolColor_Label))
                    .addGroup(toolSet_SequenceSetLayout.createSequentialGroup()
                        .addComponent(toolSet_SequenceSet_Column, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(toolSet_SequenceSet_SchoolColorNoPaint)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolSet_SequenceSet_SchoolColor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toolSet_SequenceSet_SchoolColor1Paint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolSet_SequenceSet_SchoolColor2Paint)
                    .addComponent(toolSet_SequenceSet_SchoolColor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        toolSet_SequenceSetLayout.setVerticalGroup(
            toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolSet_SequenceSetLayout.createSequentialGroup()
                .addGroup(toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toolSet_SequenceSet_Row_Label)
                    .addComponent(toolSet_SequenceSet_Row, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toolSet_SequenceSet_Column_Label)
                    .addComponent(toolSet_SequenceSet_Column, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(toolSet_SequenceSetLayout.createSequentialGroup()
                .addGroup(toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toolSet_SequenceSet_SchoolColor_Label)
                    .addComponent(toolSet_SequenceSet_SchoolColor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toolSet_SequenceSet_SchoolColor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(toolSet_SequenceSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(toolSet_SequenceSet_SchoolColor1Paint)
                        .addComponent(toolSet_SequenceSet_SchoolColor2Paint))
                    .addComponent(toolSet_SequenceSet_SchoolColorNoPaint))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setText("Always use stateChanged!!!");

        menuBar_FileMenu.setText("File");

        menuBar_FileMenu_OpenMenu.setText("Open");

        menuBar_FileMenu_OpenMenu_StadiumItem.setText("Stadium");
        menuBar_FileMenu_OpenMenu_StadiumItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_FileMenu_OpenMenu_StadiumItemActionPerformed(evt);
            }
        });
        menuBar_FileMenu_OpenMenu.add(menuBar_FileMenu_OpenMenu_StadiumItem);

        menuBar_FileMenu_OpenMenu_SequenceItem.setText("Sequence");
        menuBar_FileMenu_OpenMenu_SequenceItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_FileMenu_OpenMenu_SequenceItemActionPerformed(evt);
            }
        });
        menuBar_FileMenu_OpenMenu.add(menuBar_FileMenu_OpenMenu_SequenceItem);

        menuBar_FileMenu.add(menuBar_FileMenu_OpenMenu);

        menuBar_FileMenu_SaveMenu.setText("Save");

        menuBar_FileMenu_SaveMenu_StadiumItem.setText("Stadium");
        menuBar_FileMenu_SaveMenu_StadiumItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_FileMenu_SaveMenu_StadiumItemActionPerformed(evt);
            }
        });
        menuBar_FileMenu_SaveMenu.add(menuBar_FileMenu_SaveMenu_StadiumItem);

        menuBar_FileMenu_SaveMenu_SequenceItem.setText("Sequence");
        menuBar_FileMenu_SaveMenu_SequenceItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_FileMenu_SaveMenu_SequenceItemActionPerformed(evt);
            }
        });
        menuBar_FileMenu_SaveMenu.add(menuBar_FileMenu_SaveMenu_SequenceItem);

        menuBar_FileMenu.add(menuBar_FileMenu_SaveMenu);

        menuBar_FileMenu_SaveAsMenu.setText("Save as...");

        menuBar_FileMenu_SaveAsMenu_StadiumItem.setText("Stadium");
        menuBar_FileMenu_SaveAsMenu_StadiumItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_FileMenu_SaveAsMenu_StadiumItemActionPerformed(evt);
            }
        });
        menuBar_FileMenu_SaveAsMenu.add(menuBar_FileMenu_SaveAsMenu_StadiumItem);

        menuBar_FileMenu_SaveAsMenu_SequenceItem.setText("Sequence");
        menuBar_FileMenu_SaveAsMenu_SequenceItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_FileMenu_SaveAsMenu_SequenceItemActionPerformed(evt);
            }
        });
        menuBar_FileMenu_SaveAsMenu.add(menuBar_FileMenu_SaveAsMenu_SequenceItem);

        menuBar_FileMenu.add(menuBar_FileMenu_SaveAsMenu);

        menuBar_FileMenu_PrintItem.setText("Print");
        menuBar_FileMenu_PrintItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_FileMenu_PrintItemActionPerformed(evt);
            }
        });
        menuBar_FileMenu.add(menuBar_FileMenu_PrintItem);

        menuBar.add(menuBar_FileMenu);

        menuBar_StadiumMenu.setText("Stadium");

        menuBar_StadiumMenu_BackgroundSetItem.setText("Change Stadium Background Image");
        menuBar_StadiumMenu_BackgroundSetItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_StadiumMenu_BackgroundSetItemActionPerformed(evt);
            }
        });
        menuBar_StadiumMenu.add(menuBar_StadiumMenu_BackgroundSetItem);

        menuBar_StadiumMenu_BackgroundDefaultItem.setText("Reset Stadium Background to Default");
        menuBar_StadiumMenu_BackgroundDefaultItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_StadiumMenu_BackgroundDefaultItemActionPerformed(evt);
            }
        });
        menuBar_StadiumMenu.add(menuBar_StadiumMenu_BackgroundDefaultItem);

        menuBar.add(menuBar_StadiumMenu);

        menuBar_SequenceMenu.setText("Sequence");

        jMenuItem1.setText("Reverse colors for step");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuBar_SequenceMenu.add(jMenuItem1);

        menuBar_SequenceMenu_StepFromImageItem.setText("Create step from image...");
        menuBar_SequenceMenu_StepFromImageItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_SequenceMenu_StepFromImageItemActionPerformed(evt);
            }
        });
        menuBar_SequenceMenu.add(menuBar_SequenceMenu_StepFromImageItem);

        menuBar.add(menuBar_SequenceMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(toolSet_StadiumSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(toolSet_SequenceSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(toolSet_StepsSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(toolSet_DisplaySet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(perspectivePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolSet_StadiumSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolSet_SequenceSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolSet_StepsSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolSet_DisplaySet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addComponent(perspectivePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toolSet_DisplaySet_ErrorLevelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toolSet_DisplaySet_ErrorLevelStateChanged
        // TODO add your handling code here:
        if(toolSet_DisplaySet_ErrorToggle.isSelected())
        {
            Integer error = toolSet_DisplaySet_ErrorLevel.getValue();
            perspectivePanel.getCardLayer().setError(error);
        }
    }//GEN-LAST:event_toolSet_DisplaySet_ErrorLevelStateChanged

    private void toolSet_DisplaySet_ErrorToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolSet_DisplaySet_ErrorToggleActionPerformed
        if(toolSet_DisplaySet_ErrorToggle.isSelected()) {
            perspectivePanel.getCardLayer().setError(toolSet_DisplaySet_ErrorLevel.getValue());
        } else {
            perspectivePanel.getCardLayer().setError(0);
        }

    }//GEN-LAST:event_toolSet_DisplaySet_ErrorToggleActionPerformed

    private void menuBar_FileMenu_OpenMenu_StadiumItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_FileMenu_OpenMenu_StadiumItemActionPerformed
        stadium = Stadium.loadStadiumWithFileChooser();        // TODO add your handling code here:
        if (stadium != null) {
            StadiumSyncUtil.syncStadiumToEditor(stadium, perspectivePanel.getEditorLayer());
            perspectivePanel.getStadiumLayer().setStadium(stadium.getStadiumBGFile());
            perspectivePanel.getEditorLayer().invalidateCache();
            toolSet_StadiumSet_Column.setValue(stadium.getVerticalSubdivisions());
            toolSet_StadiumSet_Row.setValue(stadium.getHorizontalSubdivisions());
            toolSet_StadiumSet_GutterSize.setValue((int) (stadium.getSubdivisionGutterSize() * 10000.0));
        }
    }//GEN-LAST:event_menuBar_FileMenu_OpenMenu_StadiumItemActionPerformed

    private void menuBar_FileMenu_OpenMenu_SequenceItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_FileMenu_OpenMenu_SequenceItemActionPerformed
        sequence = Sequence.loadSequenceWithFileChooser(perspectivePanel.stadiumLayer);
        if (sequence != null) {
            perspectivePanel.getCardLayer().setSequence(sequence);
             perspectivePanel.getCardLayer().setStep(0);
             perspectivePanel.getCardLayer().setError(0);
            perspectivePanel.getCardLayer().setVisible(true);
            toolSet_SequenceSet_SchoolColor1.setColor(sequence.getC1());
            toolSet_SequenceSet_SchoolColor2.setColor(sequence.getC2());
            syncSequenceToGUI();
        }
    }//GEN-LAST:event_menuBar_FileMenu_OpenMenu_SequenceItemActionPerformed

    private void toolSet_StepsSet_DeleteStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolSet_StepsSet_DeleteStepActionPerformed
        int currentStep = perspectivePanel.getCardLayer().getStep();
        if (currentStep == 0) {
            sequence.deleteStep(currentStep);
            toolSet_StepsSet_StepList.setSelectedIndex(0);
            System.out.println("Deleting step 0");
        } else {
            perspectivePanel.getCardLayer().setStep(currentStep - 1);
            toolSet_StepsSet_StepList.setSelectedIndex(currentStep - 1);
            sequence.deleteStep(currentStep);
            System.out.println("Deleting step that is not 0");
        }
        perspectivePanel.getCardLayer().setSequence(sequence);
        perspectivePanel.getCardLayer().setStep(perspectivePanel.getCardLayer().getStep());
        perspectivePanel.repaint();
    }//GEN-LAST:event_toolSet_StepsSet_DeleteStepActionPerformed

    private void menuBar_FileMenu_SaveMenu_StadiumItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_FileMenu_SaveMenu_StadiumItemActionPerformed
        StadiumSyncUtil.syncEditorToStadium(stadium, perspectivePanel.getEditorLayer());
        stadium.saveToFile(stadium.getFile());
    }//GEN-LAST:event_menuBar_FileMenu_SaveMenu_StadiumItemActionPerformed

    private void menuBar_FileMenu_SaveMenu_SequenceItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_FileMenu_SaveMenu_SequenceItemActionPerformed
        sequence.saveToFile(sequence.getFile());
    }//GEN-LAST:event_menuBar_FileMenu_SaveMenu_SequenceItemActionPerformed

    private void toolSet_StepsSet_AddStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolSet_StepsSet_AddStepActionPerformed
        sequence.newStep(perspectivePanel.getCardLayer().getStep() + 1);
        perspectivePanel.repaint();
        toolSet_StepsSet_StepList.setSelectedIndex(perspectivePanel.getCardLayer().getStep() + 1);
    }//GEN-LAST:event_toolSet_StepsSet_AddStepActionPerformed

    private void menuBar_FileMenu_PrintItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_FileMenu_PrintItemActionPerformed
        SequencePrinter.printSequenceLabels(sequence, "A", "B");
    }//GEN-LAST:event_menuBar_FileMenu_PrintItemActionPerformed

    private void toolSet_SequenceSet_RowStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toolSet_SequenceSet_RowStateChanged
        sequence.setGridSize(new Dimension(sequence.getGridSize().width, new Integer(toolSet_SequenceSet_Row.getValue().toString())));
        perspectivePanel.getCardLayer().setSequence(sequence);
        perspectivePanel.getCardLayer().setStep(perspectivePanel.getCardLayer().getStep());
        perspectivePanel.repaint();
    }//GEN-LAST:event_toolSet_SequenceSet_RowStateChanged

    private void toolSet_SequenceSet_ColumnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toolSet_SequenceSet_ColumnStateChanged
        sequence.setGridSize(new Dimension(new Integer(toolSet_SequenceSet_Column.getValue().toString()), sequence.getGridSize().height));
        perspectivePanel.getCardLayer().setSequence(sequence);
        perspectivePanel.getCardLayer().setStep(perspectivePanel.getCardLayer().getStep());
        perspectivePanel.repaint();
    }//GEN-LAST:event_toolSet_SequenceSet_ColumnStateChanged

    private void toolSet_StadiumSet_RowStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toolSet_StadiumSet_RowStateChanged
        perspectivePanel.editorLayer.setHorizontalSubdivisions(new Integer(toolSet_StadiumSet_Row.getValue().toString()));
        perspectivePanel.editorLayer.invalidateCache();
        perspectivePanel.repaint();
    }//GEN-LAST:event_toolSet_StadiumSet_RowStateChanged

    private void toolSet_StadiumSet_ColumnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toolSet_StadiumSet_ColumnStateChanged
        perspectivePanel.editorLayer.setVerticalSubdivisions(new Integer(toolSet_StadiumSet_Column.getValue().toString()));
        perspectivePanel.editorLayer.invalidateCache();
        perspectivePanel.repaint();
    }//GEN-LAST:event_toolSet_StadiumSet_ColumnStateChanged

    private void menuBar_FileMenu_SaveAsMenu_StadiumItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_FileMenu_SaveAsMenu_StadiumItemActionPerformed
        JFileChooser sfc = new JFileChooser();

        sfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        sfc.setMultiSelectionEnabled(false);

        sfc.setFileFilter(new FileNameExtensionFilter("Card Stadium Stadium file", Stadium.FILE_EXTENSION));

        int choice = sfc.showSaveDialog(null);

        if (choice == JFileChooser.APPROVE_OPTION) {
            stadium.saveToFile(sfc.getSelectedFile());
        }
    }//GEN-LAST:event_menuBar_FileMenu_SaveAsMenu_StadiumItemActionPerformed

    private void menuBar_FileMenu_SaveAsMenu_SequenceItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_FileMenu_SaveAsMenu_SequenceItemActionPerformed
        JFileChooser sfc = new JFileChooser();

        sfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        sfc.setMultiSelectionEnabled(false);

        sfc.setFileFilter(new FileNameExtensionFilter("Card Stadium Sequence file", Sequence.FILE_EXTENSION));

        int choice = sfc.showSaveDialog(null);

        if (choice == JFileChooser.APPROVE_OPTION) {
            sequence.saveToFile(sfc.getSelectedFile());
        }
    }//GEN-LAST:event_menuBar_FileMenu_SaveAsMenu_SequenceItemActionPerformed

    private void toolSet_DisplaySet_TransitionSpeedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toolSet_DisplaySet_TransitionSpeedStateChanged
        perspectivePanel.cardLayer.setAnimationTiming(toolSet_DisplaySet_TransitionSpeed.getValue());
    }//GEN-LAST:event_toolSet_DisplaySet_TransitionSpeedStateChanged

    private void toolSet_DisplaySet_EditorDisplayToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolSet_DisplaySet_EditorDisplayToggleActionPerformed
        perspectivePanel.editorLayer.setVisible(toolSet_DisplaySet_EditorDisplayToggle.isSelected());
    }//GEN-LAST:event_toolSet_DisplaySet_EditorDisplayToggleActionPerformed

    private void toolSet_StadiumSet_GutterSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toolSet_StadiumSet_GutterSizeStateChanged
        perspectivePanel.editorLayer.setSubdivisionGutterSize((double)toolSet_StadiumSet_GutterSize.getValue() / 10000.0);
        perspectivePanel.editorLayer.invalidateCache();
    }//GEN-LAST:event_toolSet_StadiumSet_GutterSizeStateChanged

    private void menuBar_StadiumMenu_BackgroundSetItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_StadiumMenu_BackgroundSetItemActionPerformed
        JFileChooser sfc = new JFileChooser();

        sfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        sfc.setMultiSelectionEnabled(false);

        sfc.setFileFilter(new FileNameExtensionFilter("Image File", VALID_IMAGE_TYPES));

        int choice = sfc.showOpenDialog(this);

        if (choice == JFileChooser.APPROVE_OPTION) {
            stadium.setStadiumBGFile(sfc.getSelectedFile());
            perspectivePanel.getStadiumLayer().setStadium(stadium.getStadiumBGFile());
            perspectivePanel.getStadiumLayer().repaint();
        }
    }//GEN-LAST:event_menuBar_StadiumMenu_BackgroundSetItemActionPerformed

    private void menuBar_StadiumMenu_BackgroundDefaultItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_StadiumMenu_BackgroundDefaultItemActionPerformed
        stadium.setStadiumBGFile(new File("DEFAULT"));
        perspectivePanel.getStadiumLayer().setStadium(stadium.getStadiumBGFile());
        perspectivePanel.getStadiumLayer().repaint();
    }//GEN-LAST:event_menuBar_StadiumMenu_BackgroundDefaultItemActionPerformed

    private void menuBar_SequenceMenu_StepFromImageItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_SequenceMenu_StepFromImageItemActionPerformed
        JFileChooser sfc = new JFileChooser();

        sfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        sfc.setMultiSelectionEnabled(false);

        sfc.setFileFilter(new FileNameExtensionFilter("Image File", VALID_IMAGE_TYPES));

        int choice = sfc.showOpenDialog(null);

        if (choice == JFileChooser.APPROVE_OPTION) {
            //set the step to be displayed
            sequence.addStep(sequence.getNumSteps(),
                    GameImageUtil.getStepFromImage(
                    GameImageUtil.getBufferedImage(
                    GameImageUtil.loadImageWithLocation(
                    sfc.getSelectedFile().getAbsolutePath(),
                    new MediaTracker(this), this)), sequence.getGridSize(), 4),
                    "New Step");
            //set the correct step to be selected in the list
            toolSet_StepsSet_StepList.setSelectedIndex(sequence.getNumSteps() - 1);
        }
    }//GEN-LAST:event_menuBar_SequenceMenu_StepFromImageItemActionPerformed

    private void toolSet_SequenceSet_SchoolColor1PaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolSet_SequenceSet_SchoolColor1PaintActionPerformed
        if (toolSet_SequenceSet_SchoolColor1Paint.isSelected()) {
            perspectivePanel.getCardLayer().setPaintColor(0);
        }
    }//GEN-LAST:event_toolSet_SequenceSet_SchoolColor1PaintActionPerformed

    private void toolSet_SequenceSet_SchoolColor2PaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolSet_SequenceSet_SchoolColor2PaintActionPerformed
        if (toolSet_SequenceSet_SchoolColor2Paint.isSelected()) {
            perspectivePanel.getCardLayer().setPaintColor(1);
        }
    }//GEN-LAST:event_toolSet_SequenceSet_SchoolColor2PaintActionPerformed

    private void toolSet_SequenceSet_SchoolColorNoPaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolSet_SequenceSet_SchoolColorNoPaintActionPerformed
        if (toolSet_SequenceSet_SchoolColorNoPaint.isSelected()) {
            perspectivePanel.getCardLayer().setPaintColor(-1);
        }
    }//GEN-LAST:event_toolSet_SequenceSet_SchoolColorNoPaintActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        int step = perspectivePanel.getCardLayer().getStep();
        sequence.flipColorsForStep(step);
        perspectivePanel.getCardLayer().setStep(step);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void toolSet_StepsSet_StepListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_toolSet_StepsSet_StepListValueChanged
        perspectivePanel.getCardLayer().setStep(toolSet_StepsSet_StepList.getSelectedIndex());
    }//GEN-LAST:event_toolSet_StepsSet_StepListValueChanged

    private void toolSet_StepsSet_RenameStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolSet_StepsSet_RenameStepActionPerformed
        String name = JOptionPane.showInputDialog(this, "Step Name:",
                "Rename Step", JOptionPane.QUESTION_MESSAGE);
        if(name != null && !name.equals("")){
            ((Step)(toolSet_StepsSet_StepList.getSelectedValue())).setName(name);
        }
        toolSet_StepsSet_StepList.updateUI();
    }//GEN-LAST:event_toolSet_StepsSet_RenameStepActionPerformed

    private void toolSet_StepsSet_DuplicateStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolSet_StepsSet_DuplicateStepActionPerformed
        int index = perspectivePanel.getCardLayer().getStep();
        sequence.addStep(index + 1, (int[][])DeepCopy.copy(sequence.getStep(index)), "Copy of "
                + sequence.getStepName(index));
        toolSet_StepsSet_StepList.setSelectedIndex(index + 1);
    }//GEN-LAST:event_toolSet_StepsSet_DuplicateStepActionPerformed

    private void syncSequenceToGUI() {
        toolSet_SequenceSet_Row.setValue(sequence.getGridSize().height);
        toolSet_SequenceSet_Column.setValue(sequence.getGridSize().width);
        toolSet_StepsSet_StepList.setModel(sequence);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    @Override
    public void respondToColorChange(Object sender, Color c) {
        if (sender == toolSet_SequenceSet_SchoolColor1) {
            sequence.setColors(c, sequence.getC2());
        } else if (sender == toolSet_SequenceSet_SchoolColor2) {
            sequence.setColors(sequence.getC1(), c);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup colorButtons;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuBar_FileMenu;
    private javax.swing.JMenu menuBar_FileMenu_OpenMenu;
    private javax.swing.JMenuItem menuBar_FileMenu_OpenMenu_SequenceItem;
    private javax.swing.JMenuItem menuBar_FileMenu_OpenMenu_StadiumItem;
    private javax.swing.JMenuItem menuBar_FileMenu_PrintItem;
    private javax.swing.JMenu menuBar_FileMenu_SaveAsMenu;
    private javax.swing.JMenuItem menuBar_FileMenu_SaveAsMenu_SequenceItem;
    private javax.swing.JMenuItem menuBar_FileMenu_SaveAsMenu_StadiumItem;
    private javax.swing.JMenu menuBar_FileMenu_SaveMenu;
    private javax.swing.JMenuItem menuBar_FileMenu_SaveMenu_SequenceItem;
    private javax.swing.JMenuItem menuBar_FileMenu_SaveMenu_StadiumItem;
    private javax.swing.JMenu menuBar_SequenceMenu;
    private javax.swing.JMenuItem menuBar_SequenceMenu_StepFromImageItem;
    private javax.swing.JMenu menuBar_StadiumMenu;
    private javax.swing.JMenuItem menuBar_StadiumMenu_BackgroundDefaultItem;
    private javax.swing.JMenuItem menuBar_StadiumMenu_BackgroundSetItem;
    private org.cnhs.cardstadium.gui.PerspectivePanel perspectivePanel;
    private org.cnhs.cardstadium.model.Sequence sequence;
    private org.cnhs.cardstadium.model.Stadium stadium;
    private javax.swing.JPanel toolSet_DisplaySet;
    private javax.swing.JToggleButton toolSet_DisplaySet_EditorDisplayToggle;
    private javax.swing.JSlider toolSet_DisplaySet_ErrorLevel;
    private javax.swing.JToggleButton toolSet_DisplaySet_ErrorToggle;
    private javax.swing.JLabel toolSet_DisplaySet_Error_Label;
    private javax.swing.JSlider toolSet_DisplaySet_TransitionSpeed;
    private javax.swing.JLabel toolSet_DisplaySet_TransitionSpeed_Label;
    private javax.swing.JPanel toolSet_SequenceSet;
    private javax.swing.JSpinner toolSet_SequenceSet_Column;
    private javax.swing.JLabel toolSet_SequenceSet_Column_Label;
    private javax.swing.JSpinner toolSet_SequenceSet_Row;
    private javax.swing.JLabel toolSet_SequenceSet_Row_Label;
    private org.cnhs.cardstadium.util.ColorPickerButton toolSet_SequenceSet_SchoolColor1;
    private javax.swing.JRadioButton toolSet_SequenceSet_SchoolColor1Paint;
    private org.cnhs.cardstadium.util.ColorPickerButton toolSet_SequenceSet_SchoolColor2;
    private javax.swing.JRadioButton toolSet_SequenceSet_SchoolColor2Paint;
    private javax.swing.JRadioButton toolSet_SequenceSet_SchoolColorNoPaint;
    private javax.swing.JLabel toolSet_SequenceSet_SchoolColor_Label;
    private javax.swing.JPanel toolSet_StadiumSet;
    private javax.swing.JSpinner toolSet_StadiumSet_Column;
    private javax.swing.JLabel toolSet_StadiumSet_Column_Label;
    private javax.swing.JSlider toolSet_StadiumSet_GutterSize;
    private javax.swing.JLabel toolSet_StadiumSet_GutterSize_Label;
    private javax.swing.JSpinner toolSet_StadiumSet_Row;
    private javax.swing.JLabel toolSet_StadiumSet_Row_Label;
    private javax.swing.JPanel toolSet_StepsSet;
    private javax.swing.JButton toolSet_StepsSet_AddStep;
    private javax.swing.JButton toolSet_StepsSet_DeleteStep;
    private javax.swing.JButton toolSet_StepsSet_DuplicateStep;
    private javax.swing.JButton toolSet_StepsSet_RenameStep;
    private org.cnhs.cardstadium.gui.DragDropList toolSet_StepsSet_StepList;
    // End of variables declaration//GEN-END:variables
}